name: Update NCAA Predictions CSV

on:
  schedule:
    - cron: '0 14 * * *' # Runs at 10:00 AM Eastern (14:00 UTC)
    - cron: '0 21 * * *' # Runs at  5:00 PM Eastern (21:00 UTC)
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  update-csv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Download NCAA Predictions CSV
        run: |
          curl -fSL -o ncaapredictions.csv https://www.thepredictiontracker.com/ncaapredictions.csv

      - name: Add slot-based filename and move CSV
        id: move
        run: |
          # Use UTC date for a uniform YYYYMMDD portion
          date_utc=$(date -u +'%Y%m%d')
          hour_utc=$(date -u +'%H')

          # Map scheduled UTC hours to human-friendly slots
          # Schedule: 14:00 UTC == 10am ET, 21:00 UTC == 5pm ET
          if [ "$hour_utc" = "14" ]; then
            slot="10am"
          elif [ "$hour_utc" = "21" ]; then
            slot="5pm"
          else
            # For manual dispatches or runs outside the scheduled times, mark as manual with time for uniqueness
            if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
              slot="manual-$(date -u +'%H%M%S')"
            else
              slot="run-$(date -u +'%H%M%S')"
            fi
          fi

          mkdir -p data
          newfile="data/ncaapredictions_${date_utc}_${slot}.csv"
          mv ncaapredictions.csv "$newfile"
          echo "NEWFILE=$newfile" >> $GITHUB_ENV
          echo "SLOT=$slot" >> $GITHUB_ENV

      - name: Check CSV Changes (detect new or changed files)
        id: check-csv
        run: |
          git add "$NEWFILE"
          if git diff --cached --exit-code --quiet; then
            echo "NO_CHANGES=true" >> $GITHUB_ENV
            echo "No staged changes to commit"
          else
            echo "DIFFERENT_CSV=true" >> $GITHUB_ENV
            echo "Staged changes detected"
          fi

      - name: Commit and Push Changes
        if: env.DIFFERENT_CSV == 'true' || github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # ensure we are on the main branch and up-to-date
          git fetch origin main
          git checkout main
          git reset --hard origin/main
          timestamp=$(date -u +'%Y%m%d%H%M%S')
          branch_name="update-csv-${SLOT}-${timestamp}"
          git checkout -b "$branch_name"
          git commit -m "chore: Update NCAA predictions CSV (${SLOT})" || echo "No commit made"
          git push origin "$branch_name"
          git checkout main
          git pull origin main
          git merge --no-ff "$branch_name" -m "Merge $branch_name"
          git push origin main
          git push origin --delete "$branch_name" || true

      - name: No changes detected
        if: env.NO_CHANGES == 'true'
        run: echo "No CSV changes detected; nothing to commit."
