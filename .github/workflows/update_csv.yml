name: Update NCAA Predictions CSV

on:
  schedule:
    - cron: '0 14 * * *' # Runs at 10:00 AM Eastern (14:00 UTC)
    - cron: '0 21 * * *' # Runs at  5:00 PM Eastern (21:00 UTC)
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  update-csv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Download NCAA Predictions CSV
        run: |
          curl -fSL -o ncaapredictions.csv https://www.thepredictiontracker.com/ncaapredictions.csv

      - name: Compute target date/slot and move CSV
        id: move
        run: |
          now_ts=$(date -u +%s)
          today=$(date -u +%Y-%m-%d)
          ts14=$(date -u -d "$today 14:00:00 UTC" +%s)
          ts21=$(date -u -d "$today 21:00:00 UTC" +%s)

          if [ "$now_ts" -ge "$ts21" ]; then
            slot="5pm"
            target_date=$(date -u +%Y%m%d)
          elif [ "$now_ts" -ge "$ts14" ]; then
            slot="10am"
            target_date=$(date -u +%Y%m%d)
          else
            slot="5pm"
            target_date=$(date -u -d 'yesterday' +%Y%m%d)
          fi

          mkdir -p data
          newfile="data/ncaapredictions_${target_date}_${slot}.csv"
          mv ncaapredictions.csv "$newfile"
          echo "NEWFILE=$newfile" >> $GITHUB_ENV
          echo "SLOT=$slot" >> $GITHUB_ENV
          echo "TARGET_DATE=$target_date" >> $GITHUB_ENV

      - name: Debug: show NEWFILE and data dir
        run: |
          echo "NEWFILE=$NEWFILE"
          ls -la data || true
          file "$NEWFILE" || true

      - name: Stage new file
        run: |
          git add "$NEWFILE"

      - name: Check CSV Changes (detect staged changes)
        id: check-csv
        run: |
          if git diff --cached --exit-code --quiet; then
            echo "NO_STAGED_CHANGES=true" >> $GITHUB_ENV
            echo "No staged changes to commit"
          else
            echo "STAGED_CHANGES=true" >> $GITHUB_ENV
            echo "Staged changes detected"
          fi

      - name: Commit and Push Changes (allow manual test commits)
        if: env.STAGED_CHANGES == 'true' || github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch origin main
          git checkout main
          git reset --hard origin/main

          timestamp=$(date -u +'%Y%m%d%H%M%S')
          branch_name="update-csv-${TARGET_DATE}-${SLOT}-${timestamp}"
          git checkout -b "$branch_name"

          if git diff --cached --exit-code --quiet; then
            if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
              git commit --allow-empty -m "chore: Manual test commit for NCAA predictions CSV (${TARGET_DATE}_${SLOT})"
            else
              echo "No changes to commit; exiting."
              exit 0
            fi
          else
            git commit -m "chore: Update NCAA predictions CSV (${TARGET_DATE}_${SLOT})"
          fi

          git push origin "$branch_name"
          git checkout main
          git pull origin main
          git merge --no-ff "$branch_name" -m "Merge $branch_name"
          git push origin main
          git push origin --delete "$branch_name" || true

      - name: No changes detected
        if: env.NO_STAGED_CHANGES == 'true' && github.event_name != 'workflow_dispatch'
        run: echo "No CSV changes detected; nothing to commit."
